{
    "info": {
        "_postman_id": "archy-xr-mobile-api-v2-final",
        "name": "Archy XR Mobile API - v2.0 Final",
        "description": "Complete mobile API collection for Archy XR with corrected access control, project browsing, and comprehensive testing.\n\n🔑 KEY FEATURES:\n• Corrected User Access Control (Users can view ALL projects but cannot modify any)\n• Project Browse endpoint separate from assigned projects\n• Comprehensive role-based testing\n• Fixed database schema issues (no status column)\n• Complete workflow testing\n\n📊 ACCESS CONTROL MATRIX:\n| Role      | View Projects | Create | Modify | Delete |\n|-----------|---------------|--------|--------|---------|\n| Admin     | All projects  |   ✅   |   ✅   |   ✅   |\n| User      | All projects  |   ❌   |   ❌   |   ❌   |\n| Archivist | Only assigned |   ❌   |   ❌   |   ❌   |\n\nUpdated: August 2025",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "console.log('🚀 Request:', pm.info.requestName);"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "const response = pm.response.json();",
                    "if (response.success) {",
                    "    console.log('✅', pm.info.requestName, 'successful');",
                    "} else {",
                    "    console.log('❌', pm.info.requestName, 'failed:', response.error);",
                    "}",
                    "pm.test('Response has success field', () => {",
                    "    pm.expect(response).to.have.property('success');",
                    "});"
                ]
            }
        }
    ],
    "item": [
        {
            "name": "🔐 Authentication",
            "item": [
                {
                    "name": "Login Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.session) {",
                                    "    pm.environment.set('admin_token', response.data.session.accessToken);",
                                    "    pm.environment.set('admin_refresh', response.data.session.refreshToken);",
                                    "    console.log('👑 Admin login successful:', response.data.user.email);",
                                    "    console.log('🎭 Role:', response.data.user.role);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "auth",
                                "login"
                            ]
                        }
                    }
                },
                {
                    "name": "Login User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.session) {",
                                    "    pm.environment.set('user_token', response.data.session.accessToken);",
                                    "    pm.environment.set('user_refresh', response.data.session.refreshToken);",
                                    "    console.log('👤 User login successful:', response.data.user.email);",
                                    "    console.log('🎭 Role:', response.data.user.role);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "auth",
                                "login"
                            ]
                        }
                    }
                },
                {
                    "name": "Login Archivist",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.session) {",
                                    "    pm.environment.set('archivist_token', response.data.session.accessToken);",
                                    "    pm.environment.set('archivist_refresh', response.data.session.refreshToken);",
                                    "    console.log('📚 Archivist login successful:', response.data.user.email);",
                                    "    console.log('🎭 Role:', response.data.user.role);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"{{archivist_email}}\",\n  \"password\": \"{{archivist_password}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "auth",
                                "login"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "🔒 Access Control Tests",
            "description": "Comprehensive testing of corrected access control matrix",
            "item": [
                {
                    "name": "Admin: Full Access Verification",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    const total = response.data.totalCount;",
                                    "    const accessible = response.data.projects.filter(p => p.canAccess).length;",
                                    "    console.log('👑 ADMIN ACCESS VERIFICATION:');",
                                    "    console.log(`📊 Total projects: ${total}`);",
                                    "    console.log(`🔓 Can access: ${accessible}`);",
                                    "    console.log(`✅ Expected: Admin should access ALL projects`);",
                                    "    console.log(`🎯 Result: ${accessible === total ? 'CORRECT ✨' : 'INCORRECT ❌'}`);",
                                    "    ",
                                    "    pm.test('Admin can access all projects', () => {",
                                    "        pm.expect(accessible).to.equal(total);",
                                    "    });",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{admin_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "User: View All, Modify None",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    const total = response.data.totalCount;",
                                    "    const accessible = response.data.projects.filter(p => p.canAccess).length;",
                                    "    const assigned = response.data.projects.filter(p => p.isAssigned).length;",
                                    "    console.log('👤 USER ACCESS VERIFICATION:');",
                                    "    console.log(`📊 Total projects: ${total}`);",
                                    "    console.log(`🔓 Can access: ${accessible}`);",
                                    "    console.log(`📌 Assigned to: ${assigned}`);",
                                    "    console.log(`✅ Expected: User should VIEW all but MODIFY none`);",
                                    "    console.log(`🎯 Browse Access: ${accessible === total ? 'CORRECT ✨' : 'INCORRECT ❌'}`);",
                                    "    ",
                                    "    pm.test('User can view all projects', () => {",
                                    "        pm.expect(accessible).to.equal(total);",
                                    "    });",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "User: Create Project (Should Fail)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "const blocked = !response.success && pm.response.code === 403;",
                                    "console.log('🚫 USER MODIFICATION TEST:');",
                                    "console.log(`📝 Create project attempt: ${pm.response.code}`);",
                                    "console.log(`✅ Expected: Should be BLOCKED (403)`);",
                                    "console.log(`🎯 Result: ${blocked ? 'CORRECTLY BLOCKED ✨' : 'INCORRECTLY ALLOWED ❌'}`);",
                                    "if (!blocked) {",
                                    "    console.log('⚠️ SECURITY ISSUE: User was able to create project!');",
                                    "}",
                                    "",
                                    "pm.test('User cannot create projects', () => {",
                                    "    pm.expect(pm.response.code).to.equal(403);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Unauthorized User Project\",\n  \"description\": \"This should be blocked for User role\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects"
                            ]
                        }
                    }
                },
                {
                    "name": "Archivist: Assigned Only",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    const total = response.data.totalCount;",
                                    "    const accessible = response.data.projects.filter(p => p.canAccess).length;",
                                    "    const assigned = response.data.projects.filter(p => p.isAssigned).length;",
                                    "    console.log('📚 ARCHIVIST ACCESS VERIFICATION:');",
                                    "    console.log(`📊 Total projects: ${total}`);",
                                    "    console.log(`🔓 Can access: ${accessible}`);",
                                    "    console.log(`📌 Assigned to: ${assigned}`);",
                                    "    console.log(`✅ Expected: Archivist should only see ASSIGNED projects`);",
                                    "    console.log(`🎯 Result: ${accessible === assigned ? 'CORRECT ✨' : 'INCORRECT ❌'}`);",
                                    "    ",
                                    "    pm.test('Archivist can only access assigned projects', () => {",
                                    "        pm.expect(accessible).to.equal(assigned);",
                                    "    });",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{archivist_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "Archivist: Create Project (Should Fail)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "const blocked = !response.success && pm.response.code === 403;",
                                    "console.log('🚫 ARCHIVIST MODIFICATION TEST:');",
                                    "console.log(`📝 Create project attempt: ${pm.response.code}`);",
                                    "console.log(`✅ Expected: Should be BLOCKED (403)`);",
                                    "console.log(`🎯 Result: ${blocked ? 'CORRECTLY BLOCKED ✨' : 'INCORRECTLY ALLOWED ❌'}`);",
                                    "if (!blocked) {",
                                    "    console.log('⚠️ SECURITY ISSUE: Archivist was able to create project!');",
                                    "}",
                                    "",
                                    "pm.test('Archivist cannot create projects', () => {",
                                    "    pm.expect(pm.response.code).to.equal(403);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{archivist_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Unauthorized Archivist Project\",\n  \"description\": \"This should be blocked for Archivist role\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects"
                            ]
                        }
                    }
                },
                {
                    "name": "Access Control Summary Report",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "console.log('');",
                                    "console.log('🎯 CORRECTED ACCESS CONTROL MATRIX:');",
                                    "console.log('==========================================');",
                                    "console.log('| Role      | View Projects | Create | Modify | Delete |');",
                                    "console.log('|-----------|---------------|--------|--------|--------|');",
                                    "console.log('| Admin     | All projects  |   ✅   |   ✅   |   ✅   |');",
                                    "console.log('| User      | All projects  |   ❌   |   ❌   |   ❌   |');",
                                    "console.log('| Archivist | Only assigned |   ❌   |   ❌   |   ❌   |');",
                                    "console.log('==========================================');",
                                    "console.log('');",
                                    "console.log('🔑 KEY CORRECTIONS IMPLEMENTED:');",
                                    "console.log('• Users can now VIEW all projects (not just assigned)');",
                                    "console.log('• Users CANNOT modify any projects (security requirement)');",
                                    "console.log('• Archivists restricted to assigned projects only');",
                                    "console.log('• Browse endpoint shows access permissions clearly');",
                                    "console.log('• Fixed database schema issues (removed status column)');",
                                    "console.log('• Comprehensive error handling with proper HTTP codes');",
                                    "console.log('');",
                                    "console.log('✅ All access control tests should pass!');",
                                    "",
                                    "pm.test('Access control documentation verified', () => {",
                                    "    pm.expect(true).to.be.true;",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/auth/profile",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "auth",
                                "profile"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "📁 Project Browse & Discovery",
            "description": "Testing the browse endpoint with different user roles",
            "item": [
                {
                    "name": "Browse All Projects (Admin)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.projects.length > 0) {",
                                    "    pm.environment.set('sample_project_id', response.data.projects[0].id);",
                                    "    console.log('👑 Admin Browse Results:');",
                                    "    console.log(`📊 Total projects: ${response.data.totalCount}`);",
                                    "    console.log(`🔓 All projects accessible to Admin`);",
                                    "    console.log(`🎯 Sample project ID: ${response.data.projects[0].id}`);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{admin_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "Browse All Projects (User)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    const accessible = response.data.projects.filter(p => p.canAccess).length;",
                                    "    const assigned = response.data.projects.filter(p => p.isAssigned).length;",
                                    "    console.log('👤 User Browse Results:');",
                                    "    console.log(`📊 Total projects: ${response.data.totalCount}`);",
                                    "    console.log(`🔓 Can access: ${accessible}`);",
                                    "    console.log(`📌 Assigned to: ${assigned}`);",
                                    "    console.log(`🎯 User can discover all projects!`);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "Browse Projects (Archivist)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    const accessible = response.data.projects.filter(p => p.canAccess).length;",
                                    "    const assigned = response.data.projects.filter(p => p.isAssigned).length;",
                                    "    console.log('📚 Archivist Browse Results:');",
                                    "    console.log(`📊 Total projects: ${response.data.totalCount}`);",
                                    "    console.log(`🔓 Can access: ${accessible}`);",
                                    "    console.log(`📌 Assigned to: ${assigned}`);",
                                    "    console.log(`🎯 Archivist restricted to assigned only`);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{archivist_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ]
                        }
                    }
                },
                {
                    "name": "Search Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success) {",
                                    "    console.log('🔍 Search Results:');",
                                    "    console.log(`📝 Search term: 'tower'`);",
                                    "    console.log(`📊 Found: ${response.data.projects.length} projects`);",
                                    "    response.data.projects.forEach(project => {",
                                    "        console.log(`📁 ${project.name} - ${project.description || 'No description'}`);",
                                    "    });",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/browse?search=tower",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "browse"
                            ],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "tower",
                                    "description": "Search for projects containing 'tower'"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "📋 Project Management",
            "item": [
                {
                    "name": "List Assigned Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.projects.length > 0) {",
                                    "        console.log(`📋 User assigned to ${response.data.projects.length} projects`);",
                                    "    } else {",
                                    "        console.log('📋 User has no assigned projects');",
                                    "    }"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Project (Admin Only)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.project) {",
                                    "    pm.environment.set('new_project_id', response.data.project.id);",
                                    "    console.log('✅ Project created:', response.data.project.name);",
                                    "    console.log('📍 Location:', response.data.project.location.name);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{admin_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Test Mobile Project\",\n  \"description\": \"Created via mobile API v2.0\",\n  \"location\": {\n    \"latitude\": 48.8584,\n    \"longitude\": 2.2945,\n    \"name\": \"Eiffel Tower\",\n    \"address\": \"Champ de Mars, 5 Avenue Anatole France, 75007 Paris, France\",\n    \"description\": \"Iron lattice tower located on the Champ de Mars in Paris, France\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "📎 File Management",
            "item": [
                {
                    "name": "List Project Files",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "const response = pm.response.json();",
                                    "if (response.success && response.data.files.length > 0) {",
                                    "    const fileWithContent = response.data.files.find(f => f.size > 0);",
                                    "    if (fileWithContent) {",
                                    "        pm.environment.set('sample_file_id', fileWithContent.id);",
                                    "        console.log('📁 Found', response.data.files.length, 'files');",
                                    "        console.log('🎯 Sample file:', fileWithContent.name, '(' + fileWithContent.size + ' bytes)');",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{user_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/projects/{{sample_project_id}}/files",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "projects",
                                "{{sample_project_id}}",
                                "files"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "🚀 Complete Workflow Test",
            "description": "End-to-end mobile app workflow demonstration",
            "item": [
                {
                    "name": "Mobile Workflow Summary",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "console.log('📱 MOBILE APP WORKFLOW v2.0:');",
                                    "console.log('');",
                                    "console.log('1. 🔐 Login Users → Get access tokens for all roles');",
                                    "console.log('2. 🔒 Access Control → Verify corrected permission matrix');",
                                    "console.log('3. 🔍 Browse Projects → Discover all available projects');",
                                    "console.log('4. 📋 List Assigned → See only assigned projects');",
                                    "console.log('5. 📁 Project Details → Get specific project information');",
                                    "console.log('6. 📎 File Management → Access files based on permissions');",
                                    "console.log('');",
                                    "console.log('🎯 KEY IMPROVEMENTS IN v2.0:');",
                                    "console.log('   • Fixed User access control (view all, modify none)');",
                                    "console.log('   • Resolved database schema issues');",
                                    "console.log('   • Enhanced error handling and testing');",
                                    "console.log('   • Comprehensive permission verification');",
                                    "console.log('   • Clear role-based functionality');",
                                    "console.log('');",
                                    "console.log('✅ Run the collection to verify all functionality!');"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/mobile/auth/profile",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "mobile",
                                "auth",
                                "profile"
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:3000",
            "type": "string"
        }
    ]
}