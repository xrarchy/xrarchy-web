{
    "name": "üë• User Assignment Management",
    "description": "Assign and manage users on projects - Admin and Archivist only",
    "item": [
        {
            "name": "üìã List Project Users",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "",
                            "pm.test('Project users listed successfully', () => {",
                            "    pm.expect(response).to.have.property('assignments');",
                            "});",
                            "",
                            "if (response.assignments) {",
                            "    console.log('üë• Project Users:');",
                            "    console.log(`üìä Total users assigned: ${response.assignments.length}`);",
                            "    ",
                            "    response.assignments.forEach((assignment, index) => {",
                            "        console.log(`${index + 1}. ${assignment.assigned_user.email} (${assignment.assigned_user.role})`);",
                            "        console.log(`   üìÖ Assigned: ${new Date(assignment.assigned_at).toLocaleDateString()}`);",
                            "    });",
                            "    ",
                            "    // Store a user ID for testing removal (if any users exist)",
                            "    if (response.assignments.length > 0) {",
                            "        pm.environment.set('test_user_to_remove', response.assignments[0].assigned_user.id);",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{admin_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "‚ûï Assign User to Project (Admin)",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "console.log('');",
                            "console.log('üë• USER ASSIGNMENT TEST');",
                            "console.log('Project ID:', pm.variables.get('admin_project_id'));",
                            "console.log('Note: Set {{user_id_to_assign}} variable to test assignment');",
                            "console.log('You can get user IDs from the admin users list endpoint');",
                            "console.log('');"
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "",
                            "pm.test('User assignment response received', () => {",
                            "    pm.expect([200, 400]).to.include(pm.response.code);",
                            "});",
                            "",
                            "if (response.success && response.assignment) {",
                            "    console.log('‚úÖ User Assignment Success:');",
                            "    console.log(`üë§ User: ${response.assignment.assigned_user.email}`);",
                            "    console.log(`üé≠ Role: ${response.assignment.assigned_user.role}`);",
                            "    console.log(`üìÖ Assigned: ${new Date(response.assignment.assigned_at).toLocaleString()}`);",
                            "    console.log(`üí¨ Message: ${response.message}`);",
                            "    ",
                            "    // Store the assigned user ID for removal testing",
                            "    pm.environment.set('assigned_user_id', response.assignment.assigned_user.id);",
                            "} else if (!response.success && pm.response.code === 400) {",
                            "    console.log('‚ÑπÔ∏è User already assigned or validation error');",
                            "} else {",
                            "    console.log('‚ùå Assignment failed:', response.error || 'Unknown error');",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{admin_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{user_id_to_assign}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "‚ûï Assign User to Project (Archivist)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "",
                            "pm.test('Archivist assignment response', () => {",
                            "    pm.expect([200, 400, 403]).to.include(pm.response.code);",
                            "});",
                            "",
                            "if (response.success) {",
                            "    console.log('‚úÖ Archivist Assignment Success:');",
                            "    console.log(`üë§ User: ${response.assignment.assigned_user.email}`);",
                            "    console.log(`üìö Assigned by: Archivist`);",
                            "} else if (pm.response.code === 400) {",
                            "    console.log('‚ÑπÔ∏è User already assigned or validation error');",
                            "} else if (pm.response.code === 403) {",
                            "    console.log('‚ö†Ô∏è Archivist assignment blocked - check permissions');",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{archivist_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{user_id_to_assign}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "üö´ Assign User (User Role - Should Fail)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "const blocked = !response.success && pm.response.code === 403;",
                            "",
                            "console.log('üö´ USER ASSIGNMENT PERMISSION TEST:');",
                            "console.log(`üìù Assignment attempt: ${pm.response.code}`);",
                            "console.log(`‚úÖ Expected: Should be BLOCKED (403)`);",
                            "console.log(`üéØ Result: ${blocked ? 'CORRECTLY BLOCKED ‚ú®' : 'INCORRECTLY ALLOWED ‚ùå'}`);",
                            "",
                            "if (!blocked) {",
                            "    console.log('‚ö†Ô∏è SECURITY ISSUE: Regular user was able to assign users!');",
                            "}",
                            "",
                            "pm.test('Regular users cannot assign users', () => {",
                            "    pm.expect(pm.response.code).to.equal(403);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{user_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{user_id_to_assign}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "‚ûñ Remove User from Project (Admin)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "",
                            "pm.test('User removal response received', () => {",
                            "    pm.expect([200, 404]).to.include(pm.response.code);",
                            "});",
                            "",
                            "if (response.success) {",
                            "    console.log('‚úÖ User Removal Success:');",
                            "    console.log(`üí¨ Message: ${response.message}`);",
                            "    console.log('üë§ User has been removed from the project');",
                            "} else {",
                            "    console.log('‚ùå User removal failed:', response.error || 'Unknown error');",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{admin_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "DELETE",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{assigned_user_id}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "‚ûñ Remove User from Project (Archivist)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "",
                            "pm.test('Archivist removal response', () => {",
                            "    pm.expect([200, 403, 404]).to.include(pm.response.code);",
                            "});",
                            "",
                            "if (response.success) {",
                            "    console.log('‚úÖ Archivist Removal Success:');",
                            "    console.log(`üí¨ Message: ${response.message}`);",
                            "    console.log('üìö Removed by: Archivist');",
                            "} else if (pm.response.code === 403) {",
                            "    console.log('‚ö†Ô∏è Archivist removal blocked - check permissions');",
                            "} else {",
                            "    console.log('‚ÑπÔ∏è User not found or already removed');",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{archivist_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "DELETE",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{test_user_to_remove}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "üö´ Remove User (User Role - Should Fail)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "const response = pm.response.json();",
                            "const blocked = !response.success && pm.response.code === 403;",
                            "",
                            "console.log('üö´ USER REMOVAL PERMISSION TEST:');",
                            "console.log(`üìù Removal attempt: ${pm.response.code}`);",
                            "console.log(`‚úÖ Expected: Should be BLOCKED (403)`);",
                            "console.log(`üéØ Result: ${blocked ? 'CORRECTLY BLOCKED ‚ú®' : 'INCORRECTLY ALLOWED ‚ùå'}`);",
                            "",
                            "if (!blocked) {",
                            "    console.log('‚ö†Ô∏è SECURITY ISSUE: Regular user was able to remove users!');",
                            "}",
                            "",
                            "pm.test('Regular users cannot remove other users', () => {",
                            "    pm.expect(pm.response.code).to.equal(403);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{user_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "DELETE",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"userId\": \"{{test_user_to_remove}}\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        },
        {
            "name": "üìä User Assignment Summary Report",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "console.log('');",
                            "console.log('üë• USER ASSIGNMENT MANAGEMENT SUMMARY:');",
                            "console.log('=============================================');",
                            "console.log('| Role      | Assign Users | Remove Users | View Users |');",
                            "console.log('|-----------|--------------|--------------|------------|');",
                            "console.log('| Admin     |      ‚úÖ      |      ‚úÖ      |     ‚úÖ     |');",
                            "console.log('| User      |      ‚ùå      |  Self Only   |     ‚úÖ     |');",
                            "console.log('| Archivist |      ‚úÖ      |      ‚úÖ      |     ‚úÖ     |');",
                            "console.log('=============================================');",
                            "console.log('');",
                            "console.log('üîß AVAILABLE ENDPOINTS:');",
                            "console.log('‚Ä¢ GET /api/projects/{id}/users - List project users');",
                            "console.log('‚Ä¢ POST /api/projects/{id}/users - Assign user to project');",
                            "console.log('‚Ä¢ DELETE /api/projects/{id}/users - Remove user from project');",
                            "console.log('');",
                            "console.log('üîë PERMISSION DETAILS:');",
                            "console.log('‚Ä¢ Admin: Full control over user assignments');",
                            "console.log('‚Ä¢ Archivist: Can manage users on assigned projects');",
                            "console.log('‚Ä¢ User: Can view assignments, remove themselves only');",
                            "console.log('‚Ä¢ Comprehensive audit trail with assignment timestamps');",
                            "console.log('‚Ä¢ Prevents duplicate assignments automatically');",
                            "console.log('');",
                            "console.log('‚úÖ All user assignment tests should pass!');",
                            "",
                            "pm.test('User assignment documentation verified', () => {",
                            "    pm.expect(true).to.be.true;",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{admin_token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/projects/{{admin_project_id}}/users",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "api",
                        "projects",
                        "{{admin_project_id}}",
                        "users"
                    ]
                }
            }
        }
    ]
}